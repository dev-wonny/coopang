plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

// bootJar 작업은 실행 가능한 jar을 생성하려고 시도하기 때문에 이를 위해서는 main() 메서드가 필요합니다.
// Root 프로젝트는 main 없이 라이브러리의 역할을 하는 모듈이기 때문에 false로 비활성화해줍니다.
bootJar.enabled = false
jar.enabled = true

allprojects {

    group = 'com.coopang'
    version = '0.0.1-SNAPSHOT'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    repositories {
        mavenCentral()
    }

    ext {
        set('springCloudVersion', "2023.0.3")
    }
}

subprojects {
    // 공통 설정
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

        // validation
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.projectlombok:lombok'

        // Prometheus for metrics monitoring
        implementation 'io.micrometer:micrometer-registry-prometheus'

        // Loki Logback Appender for logging to Loki
        implementation 'com.github.loki4j:loki-logback-appender:1.5.1'

        // Swagger for API documentation
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    }

    test {
        useJUnitPlatform()
    }
}
